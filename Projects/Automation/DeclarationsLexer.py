# Generated from Declarations.g4 by ANTLR 4.9.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


from parse_tree import *



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2%")
        buf.write("\u0158\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3")
        buf.write("\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3")
        buf.write("\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3")
        buf.write("\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3")
        buf.write("\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3")
        buf.write("\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3!\3!\7!\u0134")
        buf.write("\n!\f!\16!\u0137\13!\3\"\6\"\u013a\n\"\r\"\16\"\u013b")
        buf.write("\3\"\3\"\3#\3#\3#\3#\7#\u0144\n#\f#\16#\u0147\13#\3#\3")
        buf.write("#\3#\3#\3#\3$\3$\3$\3$\7$\u0152\n$\f$\16$\u0155\13$\3")
        buf.write("$\3$\3\u0145\2%\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A")
        buf.write("\"C#E$G%\3\2\6\4\2C\\c|\5\2\62;C\\c|\5\2\13\f\17\17\"")
        buf.write("\"\4\2\f\f\17\17\2\u015b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3")
        buf.write("\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2")
        buf.write("\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2")
        buf.write("\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2")
        buf.write("!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\3I\3\2\2\2\5Q\3\2\2\2\7]\3\2\2\2\t_\3\2")
        buf.write("\2\2\13f\3\2\2\2\rt\3\2\2\2\17{\3\2\2\2\21\u0081\3\2\2")
        buf.write("\2\23\u0088\3\2\2\2\25\u0090\3\2\2\2\27\u0097\3\2\2\2")
        buf.write("\31\u0099\3\2\2\2\33\u009b\3\2\2\2\35\u00a2\3\2\2\2\37")
        buf.write("\u00a4\3\2\2\2!\u00ab\3\2\2\2#\u00b4\3\2\2\2%\u00b6\3")
        buf.write("\2\2\2\'\u00bd\3\2\2\2)\u00d3\3\2\2\2+\u00da\3\2\2\2-")
        buf.write("\u00e7\3\2\2\2/\u00e9\3\2\2\2\61\u00f0\3\2\2\2\63\u00f5")
        buf.write("\3\2\2\2\65\u00fc\3\2\2\2\67\u0103\3\2\2\29\u0107\3\2")
        buf.write("\2\2;\u010f\3\2\2\2=\u011d\3\2\2\2?\u012e\3\2\2\2A\u0131")
        buf.write("\3\2\2\2C\u0139\3\2\2\2E\u013f\3\2\2\2G\u014d\3\2\2\2")
        buf.write("IJ\7r\2\2JK\7c\2\2KL\7e\2\2LM\7m\2\2MN\7c\2\2NO\7i\2\2")
        buf.write("OP\7g\2\2P\4\3\2\2\2QR\7u\2\2RS\7r\2\2ST\7k\2\2TU\7e\2")
        buf.write("\2UV\7g\2\2VW\7\60\2\2WX\7d\2\2XY\7c\2\2YZ\7u\2\2Z[\7")
        buf.write("k\2\2[\\\7e\2\2\\\6\3\2\2\2]^\7=\2\2^\b\3\2\2\2_`\7k\2")
        buf.write("\2`a\7o\2\2ab\7r\2\2bc\7q\2\2cd\7t\2\2de\7v\2\2e\n\3\2")
        buf.write("\2\2fg\7u\2\2gh\7r\2\2hi\7k\2\2ij\7e\2\2jk\7g\2\2kl\7")
        buf.write("\60\2\2lm\7d\2\2mn\7c\2\2no\7u\2\2op\7k\2\2pq\7e\2\2q")
        buf.write("r\7\60\2\2rs\7,\2\2s\f\3\2\2\2tu\7r\2\2uv\7w\2\2vw\7d")
        buf.write("\2\2wx\7n\2\2xy\7k\2\2yz\7e\2\2z\16\3\2\2\2{|\7e\2\2|")
        buf.write("}\7n\2\2}~\7c\2\2~\177\7u\2\2\177\u0080\7u\2\2\u0080\20")
        buf.write("\3\2\2\2\u0081\u0082\7E\2\2\u0082\u0083\7U\2\2\u0083\u0084")
        buf.write("\7R\2\2\u0084\u0085\7K\2\2\u0085\u0086\7E\2\2\u0086\u0087")
        buf.write("\7G\2\2\u0087\22\3\2\2\2\u0088\u0089\7g\2\2\u0089\u008a")
        buf.write("\7z\2\2\u008a\u008b\7v\2\2\u008b\u008c\7g\2\2\u008c\u008d")
        buf.write("\7p\2\2\u008d\u008e\7f\2\2\u008e\u008f\7u\2\2\u008f\24")
        buf.write("\3\2\2\2\u0090\u0091\7Q\2\2\u0091\u0092\7d\2\2\u0092\u0093")
        buf.write("\7l\2\2\u0093\u0094\7g\2\2\u0094\u0095\7e\2\2\u0095\u0096")
        buf.write("\7v\2\2\u0096\26\3\2\2\2\u0097\u0098\7}\2\2\u0098\30\3")
        buf.write("\2\2\2\u0099\u009a\7\177\2\2\u009a\32\3\2\2\2\u009b\u009c")
        buf.write("\7u\2\2\u009c\u009d\7v\2\2\u009d\u009e\7c\2\2\u009e\u009f")
        buf.write("\7v\2\2\u009f\u00a0\7k\2\2\u00a0\u00a1\7e\2\2\u00a1\34")
        buf.write("\3\2\2\2\u00a2\u00a3\7*\2\2\u00a3\36\3\2\2\2\u00a4\u00a5")
        buf.write("\7$\2\2\u00a5\u00a6\7U\2\2\u00a6\u00a7\7G\2\2\u00a7\u00a8")
        buf.write("\7V\2\2\u00a8\u00a9\7$\2\2\u00a9\u00aa\7.\2\2\u00aa \3")
        buf.write("\2\2\2\u00ab\u00ac\7$\2\2\u00ac\u00ad\7T\2\2\u00ad\u00ae")
        buf.write("\7G\2\2\u00ae\u00af\7V\2\2\u00af\u00b0\7W\2\2\u00b0\u00b1")
        buf.write("\7T\2\2\u00b1\u00b2\7P\2\2\u00b2\u00b3\7$\2\2\u00b3\"")
        buf.write("\3\2\2\2\u00b4\u00b5\7+\2\2\u00b5$\3\2\2\2\u00b6\u00b7")
        buf.write("\7$\2\2\u00b7\u00b8\7P\2\2\u00b8\u00b9\7W\2\2\u00b9\u00ba")
        buf.write("\7N\2\2\u00ba\u00bb\7N\2\2\u00bb\u00bc\7$\2\2\u00bc&\3")
        buf.write("\2\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7z\2\2\u00bf\u00c0")
        buf.write("\7e\2\2\u00c0\u00c1\7\60\2\2\u00c1\u00c2\7r\2\2\u00c2")
        buf.write("\u00c3\7t\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5\7p\2\2\u00c5")
        buf.write("\u00c6\7v\2\2\u00c6\u00c7\7U\2\2\u00c7\u00c8\7v\2\2\u00c8")
        buf.write("\u00c9\7c\2\2\u00c9\u00ca\7e\2\2\u00ca\u00cb\7m\2\2\u00cb")
        buf.write("\u00cc\7V\2\2\u00cc\u00cd\7t\2\2\u00cd\u00ce\7c\2\2\u00ce")
        buf.write("\u00cf\7e\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7*\2\2\u00d1")
        buf.write("\u00d2\7+\2\2\u00d2(\3\2\2\2\u00d3\u00d4\7p\2\2\u00d4")
        buf.write("\u00d5\7c\2\2\u00d5\u00d6\7v\2\2\u00d6\u00d7\7k\2\2\u00d7")
        buf.write("\u00d8\7x\2\2\u00d8\u00d9\7g\2\2\u00d9*\3\2\2\2\u00da")
        buf.write("\u00db\7u\2\2\u00db\u00dc\7{\2\2\u00dc\u00dd\7p\2\2\u00dd")
        buf.write("\u00de\7e\2\2\u00de\u00df\7j\2\2\u00df\u00e0\7t\2\2\u00e0")
        buf.write("\u00e1\7q\2\2\u00e1\u00e2\7p\2\2\u00e2\u00e3\7k\2\2\u00e3")
        buf.write("\u00e4\7|\2\2\u00e4\u00e5\7g\2\2\u00e5\u00e6\7f\2\2\u00e6")
        buf.write(",\3\2\2\2\u00e7\u00e8\7.\2\2\u00e8.\3\2\2\2\u00e9\u00ea")
        buf.write("\7v\2\2\u00ea\u00eb\7j\2\2\u00eb\u00ec\7t\2\2\u00ec\u00ed")
        buf.write("\7q\2\2\u00ed\u00ee\7y\2\2\u00ee\u00ef\7u\2\2\u00ef\60")
        buf.write("\3\2\2\2\u00f0\u00f1\7x\2\2\u00f1\u00f2\7q\2\2\u00f2\u00f3")
        buf.write("\7k\2\2\u00f3\u00f4\7f\2\2\u00f4\62\3\2\2\2\u00f5\u00f6")
        buf.write("\7f\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8\7w\2\2\u00f8\u00f9")
        buf.write("\7d\2\2\u00f9\u00fa\7n\2\2\u00fa\u00fb\7g\2\2\u00fb\64")
        buf.write("\3\2\2\2\u00fc\u00fd\7U\2\2\u00fd\u00fe\7v\2\2\u00fe\u00ff")
        buf.write("\7t\2\2\u00ff\u0100\7k\2\2\u0100\u0101\7p\2\2\u0101\u0102")
        buf.write("\7i\2\2\u0102\66\3\2\2\2\u0103\u0104\7k\2\2\u0104\u0105")
        buf.write("\7p\2\2\u0105\u0106\7v\2\2\u01068\3\2\2\2\u0107\u0108")
        buf.write("\7d\2\2\u0108\u0109\7q\2\2\u0109\u010a\7q\2\2\u010a\u010b")
        buf.write("\7n\2\2\u010b\u010c\7g\2\2\u010c\u010d\7c\2\2\u010d\u010e")
        buf.write("\7p\2\2\u010e:\3\2\2\2\u010f\u0110\7I\2\2\u0110\u0111")
        buf.write("\7H\2\2\u0111\u0112\7U\2\2\u0112\u0113\7g\2\2\u0113\u0114")
        buf.write("\7c\2\2\u0114\u0115\7t\2\2\u0115\u0116\7e\2\2\u0116\u0117")
        buf.write("\7j\2\2\u0117\u0118\7W\2\2\u0118\u0119\7v\2\2\u0119\u011a")
        buf.write("\7k\2\2\u011a\u011b\7n\2\2\u011b\u011c\7u\2\2\u011c<\3")
        buf.write("\2\2\2\u011d\u011e\7I\2\2\u011e\u011f\7H\2\2\u011f\u0120")
        buf.write("\7U\2\2\u0120\u0121\7e\2\2\u0121\u0122\7c\2\2\u0122\u0123")
        buf.write("\7n\2\2\u0123\u0124\7c\2\2\u0124\u0125\7t\2\2\u0125\u0126")
        buf.write("\7S\2\2\u0126\u0127\7w\2\2\u0127\u0128\7c\2\2\u0128\u0129")
        buf.write("\7p\2\2\u0129\u012a\7v\2\2\u012a\u012b\7k\2\2\u012b\u012c")
        buf.write("\7v\2\2\u012c\u012d\7{\2\2\u012d>\3\2\2\2\u012e\u012f")
        buf.write("\7]\2\2\u012f\u0130\7_\2\2\u0130@\3\2\2\2\u0131\u0135")
        buf.write("\t\2\2\2\u0132\u0134\t\3\2\2\u0133\u0132\3\2\2\2\u0134")
        buf.write("\u0137\3\2\2\2\u0135\u0133\3\2\2\2\u0135\u0136\3\2\2\2")
        buf.write("\u0136B\3\2\2\2\u0137\u0135\3\2\2\2\u0138\u013a\t\4\2")
        buf.write("\2\u0139\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u0139")
        buf.write("\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u013d\3\2\2\2\u013d")
        buf.write("\u013e\b\"\2\2\u013eD\3\2\2\2\u013f\u0140\7\61\2\2\u0140")
        buf.write("\u0141\7,\2\2\u0141\u0145\3\2\2\2\u0142\u0144\13\2\2\2")
        buf.write("\u0143\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145\u0146\3")
        buf.write("\2\2\2\u0145\u0143\3\2\2\2\u0146\u0148\3\2\2\2\u0147\u0145")
        buf.write("\3\2\2\2\u0148\u0149\7,\2\2\u0149\u014a\7\61\2\2\u014a")
        buf.write("\u014b\3\2\2\2\u014b\u014c\b#\2\2\u014cF\3\2\2\2\u014d")
        buf.write("\u014e\7\61\2\2\u014e\u014f\7\61\2\2\u014f\u0153\3\2\2")
        buf.write("\2\u0150\u0152\n\5\2\2\u0151\u0150\3\2\2\2\u0152\u0155")
        buf.write("\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154")
        buf.write("\u0156\3\2\2\2\u0155\u0153\3\2\2\2\u0156\u0157\b$\2\2")
        buf.write("\u0157H\3\2\2\2\7\2\u0135\u013b\u0145\u0153\3\b\2\2")
        return buf.getvalue()


class DeclarationsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    NAME = 32
    WS = 33
    COMMENT = 34
    LINE_COMMENT = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'package'", "'spice.basic'", "';'", "'import'", "'spice.basic.*'", 
            "'public'", "'class'", "'CSPICE'", "'extends'", "'Object'", 
            "'{'", "'}'", "'static'", "'('", "'\"SET\",'", "'\"RETURN\"'", 
            "')'", "'\"NULL\"'", "'exc.printStackTrace()'", "'native'", 
            "'synchronized'", "','", "'throws'", "'void'", "'double'", "'String'", 
            "'int'", "'boolean'", "'GFSearchUtils'", "'GFScalarQuantity'", 
            "'[]'" ]

    symbolicNames = [ "<INVALID>",
            "NAME", "WS", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "NAME", "WS", 
                  "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "Declarations.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


