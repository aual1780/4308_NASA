// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parspice.proto

package parspiceTest;

public interface SpkposReqOrBuilder extends
    // @@protoc_insertion_point(interface_extends:parspiceTest.SpkposReq)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string target = 1;</code>
   * @return The target.
   */
  java.lang.String getTarget();
  /**
   * <code>string target = 1;</code>
   * @return The bytes for target.
   */
  com.google.protobuf.ByteString
      getTargetBytes();

  /**
   * <code>double et = 2;</code>
   * @return The et.
   */
  double getEt();

  /**
   * <code>string ref = 3;</code>
   * @return The ref.
   */
  java.lang.String getRef();
  /**
   * <code>string ref = 3;</code>
   * @return The bytes for ref.
   */
  com.google.protobuf.ByteString
      getRefBytes();

  /**
   * <code>string abcorr = 4;</code>
   * @return The abcorr.
   */
  java.lang.String getAbcorr();
  /**
   * <code>string abcorr = 4;</code>
   * @return The bytes for abcorr.
   */
  com.google.protobuf.ByteString
      getAbcorrBytes();

  /**
   * <code>string observer = 5;</code>
   * @return The observer.
   */
  java.lang.String getObserver();
  /**
   * <code>string observer = 5;</code>
   * @return The bytes for observer.
   */
  com.google.protobuf.ByteString
      getObserverBytes();

  /**
   * <code>repeated double pos = 6;</code>
   * @return A list containing the pos.
   */
  java.util.List<java.lang.Double> getPosList();
  /**
   * <code>repeated double pos = 6;</code>
   * @return The count of pos.
   */
  int getPosCount();
  /**
   * <code>repeated double pos = 6;</code>
   * @param index The index of the element to return.
   * @return The pos at the given index.
   */
  double getPos(int index);

  /**
   * <code>repeated double lt = 7;</code>
   * @return A list containing the lt.
   */
  java.util.List<java.lang.Double> getLtList();
  /**
   * <code>repeated double lt = 7;</code>
   * @return The count of lt.
   */
  int getLtCount();
  /**
   * <code>repeated double lt = 7;</code>
   * @param index The index of the element to return.
   * @return The lt at the given index.
   */
  double getLt(int index);
}
