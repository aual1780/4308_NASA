// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parspice.proto

package parspiceTest;

/**
 * Protobuf type {@code parspiceTest.SpkposReq}
 */
public final class SpkposReq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:parspiceTest.SpkposReq)
    SpkposReqOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SpkposReq.newBuilder() to construct.
  private SpkposReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SpkposReq() {
    target_ = "";
    ref_ = "";
    abcorr_ = "";
    observer_ = "";
    pos_ = emptyDoubleList();
    lt_ = emptyDoubleList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SpkposReq();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SpkposReq(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            target_ = s;
            break;
          }
          case 17: {

            et_ = input.readDouble();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            ref_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            abcorr_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            observer_ = s;
            break;
          }
          case 49: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              pos_ = newDoubleList();
              mutable_bitField0_ |= 0x00000001;
            }
            pos_.addDouble(input.readDouble());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              pos_ = newDoubleList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              pos_.addDouble(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 57: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              lt_ = newDoubleList();
              mutable_bitField0_ |= 0x00000002;
            }
            lt_.addDouble(input.readDouble());
            break;
          }
          case 58: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              lt_ = newDoubleList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              lt_.addDouble(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        pos_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        lt_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return parspiceTest.Parspice.internal_static_parspiceTest_SpkposReq_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return parspiceTest.Parspice.internal_static_parspiceTest_SpkposReq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            parspiceTest.SpkposReq.class, parspiceTest.SpkposReq.Builder.class);
  }

  public static final int TARGET_FIELD_NUMBER = 1;
  private volatile java.lang.Object target_;
  /**
   * <code>string target = 1;</code>
   * @return The target.
   */
  @java.lang.Override
  public java.lang.String getTarget() {
    java.lang.Object ref = target_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      target_ = s;
      return s;
    }
  }
  /**
   * <code>string target = 1;</code>
   * @return The bytes for target.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTargetBytes() {
    java.lang.Object ref = target_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      target_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ET_FIELD_NUMBER = 2;
  private double et_;
  /**
   * <code>double et = 2;</code>
   * @return The et.
   */
  @java.lang.Override
  public double getEt() {
    return et_;
  }

  public static final int REF_FIELD_NUMBER = 3;
  private volatile java.lang.Object ref_;
  /**
   * <code>string ref = 3;</code>
   * @return The ref.
   */
  @java.lang.Override
  public java.lang.String getRef() {
    java.lang.Object ref = ref_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ref_ = s;
      return s;
    }
  }
  /**
   * <code>string ref = 3;</code>
   * @return The bytes for ref.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRefBytes() {
    java.lang.Object ref = ref_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ref_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ABCORR_FIELD_NUMBER = 4;
  private volatile java.lang.Object abcorr_;
  /**
   * <code>string abcorr = 4;</code>
   * @return The abcorr.
   */
  @java.lang.Override
  public java.lang.String getAbcorr() {
    java.lang.Object ref = abcorr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      abcorr_ = s;
      return s;
    }
  }
  /**
   * <code>string abcorr = 4;</code>
   * @return The bytes for abcorr.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAbcorrBytes() {
    java.lang.Object ref = abcorr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      abcorr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OBSERVER_FIELD_NUMBER = 5;
  private volatile java.lang.Object observer_;
  /**
   * <code>string observer = 5;</code>
   * @return The observer.
   */
  @java.lang.Override
  public java.lang.String getObserver() {
    java.lang.Object ref = observer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      observer_ = s;
      return s;
    }
  }
  /**
   * <code>string observer = 5;</code>
   * @return The bytes for observer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getObserverBytes() {
    java.lang.Object ref = observer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      observer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POS_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.DoubleList pos_;
  /**
   * <code>repeated double pos = 6;</code>
   * @return A list containing the pos.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getPosList() {
    return pos_;
  }
  /**
   * <code>repeated double pos = 6;</code>
   * @return The count of pos.
   */
  public int getPosCount() {
    return pos_.size();
  }
  /**
   * <code>repeated double pos = 6;</code>
   * @param index The index of the element to return.
   * @return The pos at the given index.
   */
  public double getPos(int index) {
    return pos_.getDouble(index);
  }
  private int posMemoizedSerializedSize = -1;

  public static final int LT_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.DoubleList lt_;
  /**
   * <code>repeated double lt = 7;</code>
   * @return A list containing the lt.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getLtList() {
    return lt_;
  }
  /**
   * <code>repeated double lt = 7;</code>
   * @return The count of lt.
   */
  public int getLtCount() {
    return lt_.size();
  }
  /**
   * <code>repeated double lt = 7;</code>
   * @param index The index of the element to return.
   * @return The lt at the given index.
   */
  public double getLt(int index) {
    return lt_.getDouble(index);
  }
  private int ltMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!getTargetBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, target_);
    }
    if (et_ != 0D) {
      output.writeDouble(2, et_);
    }
    if (!getRefBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ref_);
    }
    if (!getAbcorrBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, abcorr_);
    }
    if (!getObserverBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, observer_);
    }
    if (getPosList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(posMemoizedSerializedSize);
    }
    for (int i = 0; i < pos_.size(); i++) {
      output.writeDoubleNoTag(pos_.getDouble(i));
    }
    if (getLtList().size() > 0) {
      output.writeUInt32NoTag(58);
      output.writeUInt32NoTag(ltMemoizedSerializedSize);
    }
    for (int i = 0; i < lt_.size(); i++) {
      output.writeDoubleNoTag(lt_.getDouble(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getTargetBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, target_);
    }
    if (et_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, et_);
    }
    if (!getRefBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ref_);
    }
    if (!getAbcorrBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, abcorr_);
    }
    if (!getObserverBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, observer_);
    }
    {
      int dataSize = 0;
      dataSize = 8 * getPosList().size();
      size += dataSize;
      if (!getPosList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      posMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getLtList().size();
      size += dataSize;
      if (!getLtList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      ltMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof parspiceTest.SpkposReq)) {
      return super.equals(obj);
    }
    parspiceTest.SpkposReq other = (parspiceTest.SpkposReq) obj;

    if (!getTarget()
        .equals(other.getTarget())) return false;
    if (java.lang.Double.doubleToLongBits(getEt())
        != java.lang.Double.doubleToLongBits(
            other.getEt())) return false;
    if (!getRef()
        .equals(other.getRef())) return false;
    if (!getAbcorr()
        .equals(other.getAbcorr())) return false;
    if (!getObserver()
        .equals(other.getObserver())) return false;
    if (!getPosList()
        .equals(other.getPosList())) return false;
    if (!getLtList()
        .equals(other.getLtList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TARGET_FIELD_NUMBER;
    hash = (53 * hash) + getTarget().hashCode();
    hash = (37 * hash) + ET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getEt()));
    hash = (37 * hash) + REF_FIELD_NUMBER;
    hash = (53 * hash) + getRef().hashCode();
    hash = (37 * hash) + ABCORR_FIELD_NUMBER;
    hash = (53 * hash) + getAbcorr().hashCode();
    hash = (37 * hash) + OBSERVER_FIELD_NUMBER;
    hash = (53 * hash) + getObserver().hashCode();
    if (getPosCount() > 0) {
      hash = (37 * hash) + POS_FIELD_NUMBER;
      hash = (53 * hash) + getPosList().hashCode();
    }
    if (getLtCount() > 0) {
      hash = (37 * hash) + LT_FIELD_NUMBER;
      hash = (53 * hash) + getLtList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static parspiceTest.SpkposReq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static parspiceTest.SpkposReq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static parspiceTest.SpkposReq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static parspiceTest.SpkposReq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static parspiceTest.SpkposReq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static parspiceTest.SpkposReq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static parspiceTest.SpkposReq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static parspiceTest.SpkposReq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static parspiceTest.SpkposReq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static parspiceTest.SpkposReq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static parspiceTest.SpkposReq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static parspiceTest.SpkposReq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(parspiceTest.SpkposReq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code parspiceTest.SpkposReq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:parspiceTest.SpkposReq)
      parspiceTest.SpkposReqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return parspiceTest.Parspice.internal_static_parspiceTest_SpkposReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return parspiceTest.Parspice.internal_static_parspiceTest_SpkposReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              parspiceTest.SpkposReq.class, parspiceTest.SpkposReq.Builder.class);
    }

    // Construct using parspiceTest.SpkposReq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      target_ = "";

      et_ = 0D;

      ref_ = "";

      abcorr_ = "";

      observer_ = "";

      pos_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000001);
      lt_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return parspiceTest.Parspice.internal_static_parspiceTest_SpkposReq_descriptor;
    }

    @java.lang.Override
    public parspiceTest.SpkposReq getDefaultInstanceForType() {
      return parspiceTest.SpkposReq.getDefaultInstance();
    }

    @java.lang.Override
    public parspiceTest.SpkposReq build() {
      parspiceTest.SpkposReq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public parspiceTest.SpkposReq buildPartial() {
      parspiceTest.SpkposReq result = new parspiceTest.SpkposReq(this);
      int from_bitField0_ = bitField0_;
      result.target_ = target_;
      result.et_ = et_;
      result.ref_ = ref_;
      result.abcorr_ = abcorr_;
      result.observer_ = observer_;
      if (((bitField0_ & 0x00000001) != 0)) {
        pos_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.pos_ = pos_;
      if (((bitField0_ & 0x00000002) != 0)) {
        lt_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.lt_ = lt_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof parspiceTest.SpkposReq) {
        return mergeFrom((parspiceTest.SpkposReq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(parspiceTest.SpkposReq other) {
      if (other == parspiceTest.SpkposReq.getDefaultInstance()) return this;
      if (!other.getTarget().isEmpty()) {
        target_ = other.target_;
        onChanged();
      }
      if (other.getEt() != 0D) {
        setEt(other.getEt());
      }
      if (!other.getRef().isEmpty()) {
        ref_ = other.ref_;
        onChanged();
      }
      if (!other.getAbcorr().isEmpty()) {
        abcorr_ = other.abcorr_;
        onChanged();
      }
      if (!other.getObserver().isEmpty()) {
        observer_ = other.observer_;
        onChanged();
      }
      if (!other.pos_.isEmpty()) {
        if (pos_.isEmpty()) {
          pos_ = other.pos_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensurePosIsMutable();
          pos_.addAll(other.pos_);
        }
        onChanged();
      }
      if (!other.lt_.isEmpty()) {
        if (lt_.isEmpty()) {
          lt_ = other.lt_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureLtIsMutable();
          lt_.addAll(other.lt_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      parspiceTest.SpkposReq parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (parspiceTest.SpkposReq) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object target_ = "";
    /**
     * <code>string target = 1;</code>
     * @return The target.
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        target_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string target = 1;</code>
     * @return The bytes for target.
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string target = 1;</code>
     * @param value The target to set.
     * @return This builder for chaining.
     */
    public Builder setTarget(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      target_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string target = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTarget() {
      
      target_ = getDefaultInstance().getTarget();
      onChanged();
      return this;
    }
    /**
     * <code>string target = 1;</code>
     * @param value The bytes for target to set.
     * @return This builder for chaining.
     */
    public Builder setTargetBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      target_ = value;
      onChanged();
      return this;
    }

    private double et_ ;
    /**
     * <code>double et = 2;</code>
     * @return The et.
     */
    @java.lang.Override
    public double getEt() {
      return et_;
    }
    /**
     * <code>double et = 2;</code>
     * @param value The et to set.
     * @return This builder for chaining.
     */
    public Builder setEt(double value) {
      
      et_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double et = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearEt() {
      
      et_ = 0D;
      onChanged();
      return this;
    }

    private java.lang.Object ref_ = "";
    /**
     * <code>string ref = 3;</code>
     * @return The ref.
     */
    public java.lang.String getRef() {
      java.lang.Object ref = ref_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ref_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string ref = 3;</code>
     * @return The bytes for ref.
     */
    public com.google.protobuf.ByteString
        getRefBytes() {
      java.lang.Object ref = ref_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ref_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string ref = 3;</code>
     * @param value The ref to set.
     * @return This builder for chaining.
     */
    public Builder setRef(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ref_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string ref = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRef() {
      
      ref_ = getDefaultInstance().getRef();
      onChanged();
      return this;
    }
    /**
     * <code>string ref = 3;</code>
     * @param value The bytes for ref to set.
     * @return This builder for chaining.
     */
    public Builder setRefBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ref_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object abcorr_ = "";
    /**
     * <code>string abcorr = 4;</code>
     * @return The abcorr.
     */
    public java.lang.String getAbcorr() {
      java.lang.Object ref = abcorr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        abcorr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string abcorr = 4;</code>
     * @return The bytes for abcorr.
     */
    public com.google.protobuf.ByteString
        getAbcorrBytes() {
      java.lang.Object ref = abcorr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        abcorr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string abcorr = 4;</code>
     * @param value The abcorr to set.
     * @return This builder for chaining.
     */
    public Builder setAbcorr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      abcorr_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string abcorr = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAbcorr() {
      
      abcorr_ = getDefaultInstance().getAbcorr();
      onChanged();
      return this;
    }
    /**
     * <code>string abcorr = 4;</code>
     * @param value The bytes for abcorr to set.
     * @return This builder for chaining.
     */
    public Builder setAbcorrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      abcorr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object observer_ = "";
    /**
     * <code>string observer = 5;</code>
     * @return The observer.
     */
    public java.lang.String getObserver() {
      java.lang.Object ref = observer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        observer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string observer = 5;</code>
     * @return The bytes for observer.
     */
    public com.google.protobuf.ByteString
        getObserverBytes() {
      java.lang.Object ref = observer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        observer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string observer = 5;</code>
     * @param value The observer to set.
     * @return This builder for chaining.
     */
    public Builder setObserver(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      observer_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string observer = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearObserver() {
      
      observer_ = getDefaultInstance().getObserver();
      onChanged();
      return this;
    }
    /**
     * <code>string observer = 5;</code>
     * @param value The bytes for observer to set.
     * @return This builder for chaining.
     */
    public Builder setObserverBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      observer_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList pos_ = emptyDoubleList();
    private void ensurePosIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        pos_ = mutableCopy(pos_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated double pos = 6;</code>
     * @return A list containing the pos.
     */
    public java.util.List<java.lang.Double>
        getPosList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(pos_) : pos_;
    }
    /**
     * <code>repeated double pos = 6;</code>
     * @return The count of pos.
     */
    public int getPosCount() {
      return pos_.size();
    }
    /**
     * <code>repeated double pos = 6;</code>
     * @param index The index of the element to return.
     * @return The pos at the given index.
     */
    public double getPos(int index) {
      return pos_.getDouble(index);
    }
    /**
     * <code>repeated double pos = 6;</code>
     * @param index The index to set the value at.
     * @param value The pos to set.
     * @return This builder for chaining.
     */
    public Builder setPos(
        int index, double value) {
      ensurePosIsMutable();
      pos_.setDouble(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double pos = 6;</code>
     * @param value The pos to add.
     * @return This builder for chaining.
     */
    public Builder addPos(double value) {
      ensurePosIsMutable();
      pos_.addDouble(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double pos = 6;</code>
     * @param values The pos to add.
     * @return This builder for chaining.
     */
    public Builder addAllPos(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensurePosIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, pos_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double pos = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPos() {
      pos_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList lt_ = emptyDoubleList();
    private void ensureLtIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        lt_ = mutableCopy(lt_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated double lt = 7;</code>
     * @return A list containing the lt.
     */
    public java.util.List<java.lang.Double>
        getLtList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(lt_) : lt_;
    }
    /**
     * <code>repeated double lt = 7;</code>
     * @return The count of lt.
     */
    public int getLtCount() {
      return lt_.size();
    }
    /**
     * <code>repeated double lt = 7;</code>
     * @param index The index of the element to return.
     * @return The lt at the given index.
     */
    public double getLt(int index) {
      return lt_.getDouble(index);
    }
    /**
     * <code>repeated double lt = 7;</code>
     * @param index The index to set the value at.
     * @param value The lt to set.
     * @return This builder for chaining.
     */
    public Builder setLt(
        int index, double value) {
      ensureLtIsMutable();
      lt_.setDouble(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double lt = 7;</code>
     * @param value The lt to add.
     * @return This builder for chaining.
     */
    public Builder addLt(double value) {
      ensureLtIsMutable();
      lt_.addDouble(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double lt = 7;</code>
     * @param values The lt to add.
     * @return This builder for chaining.
     */
    public Builder addAllLt(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureLtIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, lt_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double lt = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearLt() {
      lt_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:parspiceTest.SpkposReq)
  }

  // @@protoc_insertion_point(class_scope:parspiceTest.SpkposReq)
  private static final parspiceTest.SpkposReq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new parspiceTest.SpkposReq();
  }

  public static parspiceTest.SpkposReq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SpkposReq>
      PARSER = new com.google.protobuf.AbstractParser<SpkposReq>() {
    @java.lang.Override
    public SpkposReq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SpkposReq(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SpkposReq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SpkposReq> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public parspiceTest.SpkposReq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

